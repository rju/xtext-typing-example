/*
* generated by Xtext
*/
grammar InternalAppLang;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.se.lad.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.se.lad.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.se.lad.services.AppLangGrammarAccess;

}

@parser::members {
 
 	private AppLangGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AppLangGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleService
entryRuleService 
:
{ before(grammarAccess.getServiceRule()); }
	 ruleService
{ after(grammarAccess.getServiceRule()); } 
	 EOF 
;

// Rule Service
ruleService
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getServiceAccess().getGroup()); }
(rule__Service__Group__0)
{ after(grammarAccess.getServiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getGroup()); }
(rule__Expression__Group__0)
{ after(grammarAccess.getExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseExpression
entryRuleBaseExpression 
:
{ before(grammarAccess.getBaseExpressionRule()); }
	 ruleBaseExpression
{ after(grammarAccess.getBaseExpressionRule()); } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
(rule__BaseExpression__Alternatives)
{ after(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringExpression
entryRuleStringExpression 
:
{ before(grammarAccess.getStringExpressionRule()); }
	 ruleStringExpression
{ after(grammarAccess.getStringExpressionRule()); } 
	 EOF 
;

// Rule StringExpression
ruleStringExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringExpressionAccess().getGroup()); }
(rule__StringExpression__Group__0)
{ after(grammarAccess.getStringExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getAlternatives()); }
(rule__StringValue__Alternatives)
{ after(grammarAccess.getStringValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringProperty
entryRuleStringProperty 
:
{ before(grammarAccess.getStringPropertyRule()); }
	 ruleStringProperty
{ after(grammarAccess.getStringPropertyRule()); } 
	 EOF 
;

// Rule StringProperty
ruleStringProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringPropertyAccess().getReferenceAssignment()); }
(rule__StringProperty__ReferenceAssignment)
{ after(grammarAccess.getStringPropertyAccess().getReferenceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getLiteralAssignment()); }
(rule__StringLiteral__LiteralAssignment)
{ after(grammarAccess.getStringLiteralAccess().getLiteralAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getGroup()); }
(rule__Property__Group__0)
{ after(grammarAccess.getPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReference
entryRuleTypeReference 
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
(rule__TypeReference__Alternatives)
{ after(grammarAccess.getTypeReferenceAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataModel
entryRuleDataModel 
:
{ before(grammarAccess.getDataModelRule()); }
	 ruleDataModel
{ after(grammarAccess.getDataModelRule()); } 
	 EOF 
;

// Rule DataModel
ruleDataModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataModelAccess().getGroup()); }
(rule__DataModel__Group__0)
{ after(grammarAccess.getDataModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstance
entryRuleInstance 
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceAccess().getGroup()); }
(rule__Instance__Group__0)
{ after(grammarAccess.getInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleView
entryRuleView 
:
{ before(grammarAccess.getViewRule()); }
	 ruleView
{ after(grammarAccess.getViewRule()); } 
	 EOF 
;

// Rule View
ruleView
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewAccess().getGroup()); }
(rule__View__Group__0)
{ after(grammarAccess.getViewAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewContent
entryRuleViewContent 
:
{ before(grammarAccess.getViewContentRule()); }
	 ruleViewContent
{ after(grammarAccess.getViewContentRule()); } 
	 EOF 
;

// Rule ViewContent
ruleViewContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewContentAccess().getAlternatives()); }
(rule__ViewContent__Alternatives)
{ after(grammarAccess.getViewContentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewContainer
entryRuleViewContainer 
:
{ before(grammarAccess.getViewContainerRule()); }
	 ruleViewContainer
{ after(grammarAccess.getViewContainerRule()); } 
	 EOF 
;

// Rule ViewContainer
ruleViewContainer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewContainerAccess().getGroup()); }
(rule__ViewContainer__Group__0)
{ after(grammarAccess.getViewContainerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleViewElement
entryRuleViewElement 
:
{ before(grammarAccess.getViewElementRule()); }
	 ruleViewElement
{ after(grammarAccess.getViewElementRule()); } 
	 EOF 
;

// Rule ViewElement
ruleViewElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getViewElementAccess().getGroup()); }
(rule__ViewElement__Group__0)
{ after(grammarAccess.getViewElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLayout
entryRuleLayout 
:
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLayoutAccess().getAlternatives()); }
(rule__Layout__Alternatives)
{ after(grammarAccess.getLayoutAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGridLayout
entryRuleGridLayout 
:
{ before(grammarAccess.getGridLayoutRule()); }
	 ruleGridLayout
{ after(grammarAccess.getGridLayoutRule()); } 
	 EOF 
;

// Rule GridLayout
ruleGridLayout
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGridLayoutAccess().getGroup()); }
(rule__GridLayout__Group__0)
{ after(grammarAccess.getGridLayoutAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleField
entryRuleField 
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldAccess().getGroup()); }
(rule__Field__Group__0)
{ after(grammarAccess.getFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStackLayout
entryRuleStackLayout 
:
{ before(grammarAccess.getStackLayoutRule()); }
	 ruleStackLayout
{ after(grammarAccess.getStackLayoutRule()); } 
	 EOF 
;

// Rule StackLayout
ruleStackLayout
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStackLayoutAccess().getGroup()); }
(rule__StackLayout__Group__0)
{ after(grammarAccess.getStackLayoutAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSize
entryRuleSize 
:
{ before(grammarAccess.getSizeRule()); }
	 ruleSize
{ after(grammarAccess.getSizeRule()); } 
	 EOF 
;

// Rule Size
ruleSize
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSizeAccess().getGroup()); }
(rule__Size__Group__0)
{ after(grammarAccess.getSizeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSizeExpr
entryRuleSizeExpr 
:
{ before(grammarAccess.getSizeExprRule()); }
	 ruleSizeExpr
{ after(grammarAccess.getSizeExprRule()); } 
	 EOF 
;

// Rule SizeExpr
ruleSizeExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSizeExprAccess().getGroup()); }
(rule__SizeExpr__Group__0)
{ after(grammarAccess.getSizeExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule FunctionEnum
ruleFunctionEnum
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionEnumAccess().getAlternatives()); }
(rule__FunctionEnum__Alternatives)
{ after(grammarAccess.getFunctionEnumAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ViewType
ruleViewType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewTypeAccess().getAlternatives()); }
(rule__ViewType__Alternatives)
{ after(grammarAccess.getViewTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Unit
ruleUnit
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getAlternatives()); }
(rule__Unit__Alternatives)
{ after(grammarAccess.getUnitAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Direction
ruleDirection
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
(rule__Direction__Alternatives)
{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getServicesAssignment_0_0()); }
(rule__Model__ServicesAssignment_0_0)
{ after(grammarAccess.getModelAccess().getServicesAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getViewsAssignment_0_1()); }
(rule__Model__ViewsAssignment_0_1)
{ after(grammarAccess.getModelAccess().getViewsAssignment_0_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getClassesAssignment_0_2()); }
(rule__Model__ClassesAssignment_0_2)
{ after(grammarAccess.getModelAccess().getClassesAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getFunctionParserRuleCall_0()); }
	ruleFunction
{ after(grammarAccess.getBaseExpressionAccess().getFunctionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getNullLiteralParserRuleCall_1()); }
	ruleNullLiteral
{ after(grammarAccess.getBaseExpressionAccess().getNullLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getStringExpressionParserRuleCall_2()); }
	ruleStringExpression
{ after(grammarAccess.getBaseExpressionAccess().getStringExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getStringLiteralParserRuleCall_0()); }
	ruleStringLiteral
{ after(grammarAccess.getStringValueAccess().getStringLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStringValueAccess().getStringPropertyParserRuleCall_1()); }
	ruleStringProperty
{ after(grammarAccess.getStringValueAccess().getStringPropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getGroup_0()); }
(rule__TypeReference__Group_0__0)
{ after(grammarAccess.getTypeReferenceAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeReferenceAccess().getGroup_1()); }
(rule__TypeReference__Group_1__0)
{ after(grammarAccess.getTypeReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContentAccess().getViewElementParserRuleCall_0()); }
	ruleViewElement
{ after(grammarAccess.getViewContentAccess().getViewElementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getViewContentAccess().getViewContainerParserRuleCall_1()); }
	ruleViewContainer
{ after(grammarAccess.getViewContentAccess().getViewContainerParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLayoutAccess().getStackLayoutParserRuleCall_0()); }
	ruleStackLayout
{ after(grammarAccess.getLayoutAccess().getStackLayoutParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLayoutAccess().getGridLayoutParserRuleCall_1()); }
	ruleGridLayout
{ after(grammarAccess.getLayoutAccess().getGridLayoutParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionEnum__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionEnumAccess().getDECODEEnumLiteralDeclaration_0()); }
(	'decode' 
)
{ after(grammarAccess.getFunctionEnumAccess().getDECODEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getFunctionEnumAccess().getENCODEEnumLiteralDeclaration_1()); }
(	'encode' 
)
{ after(grammarAccess.getFunctionEnumAccess().getENCODEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getFunctionEnumAccess().getGETEnumLiteralDeclaration_2()); }
(	'get' 
)
{ after(grammarAccess.getFunctionEnumAccess().getGETEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getFunctionEnumAccess().getPUTEnumLiteralDeclaration_3()); }
(	'put' 
)
{ after(grammarAccess.getFunctionEnumAccess().getPUTEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewTypeAccess().getButtonEnumLiteralDeclaration_0()); }
(	'button' 
)
{ after(grammarAccess.getViewTypeAccess().getButtonEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getViewTypeAccess().getValueSpinnerEnumLiteralDeclaration_1()); }
(	'value-spinner' 
)
{ after(grammarAccess.getViewTypeAccess().getValueSpinnerEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getViewTypeAccess().getDateSpinnerEnumLiteralDeclaration_2()); }
(	'date-spinner' 
)
{ after(grammarAccess.getViewTypeAccess().getDateSpinnerEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getViewTypeAccess().getLabelEnumLiteralDeclaration_3()); }
(	'label' 
)
{ after(grammarAccess.getViewTypeAccess().getLabelEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getViewTypeAccess().getTextOutputEnumLiteralDeclaration_4()); }
(	'text' 
)
{ after(grammarAccess.getViewTypeAccess().getTextOutputEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getViewTypeAccess().getInputFieldEnumLiteralDeclaration_5()); }
(	'input' 
)
{ after(grammarAccess.getViewTypeAccess().getInputFieldEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getViewTypeAccess().getCanvasEnumLiteralDeclaration_6()); }
(	'canvas' 
)
{ after(grammarAccess.getViewTypeAccess().getCanvasEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getViewTypeAccess().getTreeListEnumLiteralDeclaration_7()); }
(	'tree-list' 
)
{ after(grammarAccess.getViewTypeAccess().getTreeListEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getPXEnumLiteralDeclaration_0()); }
(	'px' 
)
{ after(grammarAccess.getUnitAccess().getPXEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getUnitAccess().getPERCENTEnumLiteralDeclaration_1()); }
(	'%' 
)
{ after(grammarAccess.getUnitAccess().getPERCENTEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDirectionAccess().getHORIZONTALEnumLiteralDeclaration_0()); }
(	'horizontal' 
)
{ after(grammarAccess.getDirectionAccess().getHORIZONTALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getDirectionAccess().getVERTICALEnumLiteralDeclaration_1()); }
(	'vertical' 
)
{ after(grammarAccess.getDirectionAccess().getVERTICALEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_0()); }
(rule__Model__Alternatives_0)*
{ after(grammarAccess.getModelAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAssignment_1()); }
(rule__Model__ModelAssignment_1)
{ after(grammarAccess.getModelAccess().getModelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassKeyword_0()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(rule__Class__NameAssignment_1)
{ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_2()); }
(rule__Class__Group_2__0)?
{ after(grammarAccess.getClassAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
	rule__Class__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
(rule__Class__PropertiesAssignment_4)
{ after(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
)
(
{ before(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
(rule__Class__PropertiesAssignment_4)*
{ after(grammarAccess.getClassAccess().getPropertiesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Class__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__0__Impl
	rule__Class__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }

	'extends' 

{ after(grammarAccess.getClassAccess().getExtendsKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getParentAssignment_2_1()); }
(rule__Class__ParentAssignment_2_1)
{ after(grammarAccess.getClassAccess().getParentAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Service__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__0__Impl
	rule__Service__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getServiceKeyword_0()); }

	'service' 

{ after(grammarAccess.getServiceAccess().getServiceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__1__Impl
	rule__Service__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameAssignment_1()); }
(rule__Service__NameAssignment_1)
{ after(grammarAccess.getServiceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__2__Impl
	rule__Service__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getServiceAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__3__Impl
	rule__Service__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getConfigurationsAssignment_3()); }
(rule__Service__ConfigurationsAssignment_3)
{ after(grammarAccess.getServiceAccess().getConfigurationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__4__Impl
	rule__Service__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getGroup_4()); }
(rule__Service__Group_4__0)*
{ after(grammarAccess.getServiceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__5__Impl
	rule__Service__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getServiceAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__6__Impl
	rule__Service__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__7__Impl
	rule__Service__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getServiceAccess().getOperationsAssignment_7()); }
(rule__Service__OperationsAssignment_7)
{ after(grammarAccess.getServiceAccess().getOperationsAssignment_7()); }
)
(
{ before(grammarAccess.getServiceAccess().getOperationsAssignment_7()); }
(rule__Service__OperationsAssignment_7)*
{ after(grammarAccess.getServiceAccess().getOperationsAssignment_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Service__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_4__0__Impl
	rule__Service__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getServiceAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getConfigurationsAssignment_4_1()); }
(rule__Service__ConfigurationsAssignment_4_1)
{ after(grammarAccess.getServiceAccess().getConfigurationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getOpKeyword_0()); }

	'op' 

{ after(grammarAccess.getOperationAccess().getOpKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeAssignment_1()); }
(rule__Operation__TypeAssignment_1)
{ after(grammarAccess.getOperationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_2()); }
(rule__Operation__NameAssignment_2)
{ after(grammarAccess.getOperationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersAssignment_4()); }
(rule__Operation__ParametersAssignment_4)
{ after(grammarAccess.getOperationAccess().getParametersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_5()); }
(rule__Operation__Group_5__0)*
{ after(grammarAccess.getOperationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__6__Impl
	rule__Operation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__7__Impl
	rule__Operation__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnKeyword_7()); }

	'return' 

{ after(grammarAccess.getOperationAccess().getReturnKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getExpressionAssignment_8()); }
(rule__Operation__ExpressionAssignment_8)
{ after(grammarAccess.getOperationAccess().getExpressionAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Operation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_5__0__Impl
	rule__Operation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCommaKeyword_5_0()); }

	',' 

{ after(grammarAccess.getOperationAccess().getCommaKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersAssignment_5_1()); }
(rule__Operation__ParametersAssignment_5_1)
{ after(grammarAccess.getOperationAccess().getParametersAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__0__Impl
	rule__Expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBaseExpressionParserRuleCall_0()); }
	ruleBaseExpression
{ after(grammarAccess.getExpressionAccess().getBaseExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getGroup_1()); }
(rule__Expression__Group_1__0)?
{ after(grammarAccess.getExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Expression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__0__Impl
	rule__Expression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getExpressionAccess().getExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__1__Impl
	rule__Expression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getExpressionAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Expression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
(rule__Expression__RightAssignment_1_2)
{ after(grammarAccess.getExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StringExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group__0__Impl
	rule__StringExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getStringExpressionAccess().getStringValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getGroup_1()); }
(rule__StringExpression__Group_1__0)*
{ after(grammarAccess.getStringExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group_1__0__Impl
	rule__StringExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getStringExpressionLeftAction_1_0()); }
(

)
{ after(grammarAccess.getStringExpressionAccess().getStringExpressionLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group_1__1__Impl
	rule__StringExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getPlusSignKeyword_1_1()); }

	'+' 

{ after(grammarAccess.getStringExpressionAccess().getPlusSignKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getRightAssignment_1_2()); }
(rule__StringExpression__RightAssignment_1_2)
{ after(grammarAccess.getStringExpressionAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
(rule__Function__NameAssignment_0)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExpressionsAssignment_2()); }
(rule__Function__ExpressionsAssignment_2)
{ after(grammarAccess.getFunctionAccess().getExpressionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
(rule__Function__Group_3__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Function__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExpressionsAssignment_3_1()); }
(rule__Function__ExpressionsAssignment_3_1)
{ after(grammarAccess.getFunctionAccess().getExpressionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeAssignment_0()); }
(rule__Property__TypeAssignment_0)
{ after(grammarAccess.getPropertyAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Property__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
(rule__Property__NameAssignment_1)
{ after(grammarAccess.getPropertyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeReference__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_0__0__Impl
	rule__TypeReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getArrayTypeAction_0_0()); }
(

)
{ after(grammarAccess.getTypeReferenceAccess().getArrayTypeAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_0__1__Impl
	rule__TypeReference__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeAssignment_0_1()); }
(rule__TypeReference__TypeAssignment_0_1)
{ after(grammarAccess.getTypeReferenceAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_0__2__Impl
	rule__TypeReference__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getLeftSquareBracketKeyword_0_2()); }

	'[' 

{ after(grammarAccess.getTypeReferenceAccess().getLeftSquareBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_0__3__Impl
	rule__TypeReference__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getSizeAssignment_0_3()); }
(rule__TypeReference__SizeAssignment_0_3)?
{ after(grammarAccess.getTypeReferenceAccess().getSizeAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getRightSquareBracketKeyword_0_4()); }

	']' 

{ after(grammarAccess.getTypeReferenceAccess().getRightSquareBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1__0__Impl
	rule__TypeReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_1_0()); }
(

)
{ after(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1__1__Impl
	rule__TypeReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeAssignment_1_1()); }
(rule__TypeReference__TypeAssignment_1_1)
{ after(grammarAccess.getTypeReferenceAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getGroup_1_2()); }
(rule__TypeReference__Group_1_2__0)?
{ after(grammarAccess.getTypeReferenceAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeReference__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1_2__0__Impl
	rule__TypeReference__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getFullStopKeyword_1_2_0()); }

	'.' 

{ after(grammarAccess.getTypeReferenceAccess().getFullStopKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReference__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReference__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getRemainderAssignment_1_2_1()); }
(rule__TypeReference__RemainderAssignment_1_2_1)
{ after(grammarAccess.getTypeReferenceAccess().getRemainderAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__0__Impl
	rule__DataModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getDataModelAction_0()); }
(

)
{ after(grammarAccess.getDataModelAccess().getDataModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__1__Impl
	rule__DataModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getModelKeyword_1()); }

	'model' 

{ after(grammarAccess.getDataModelAccess().getModelKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__2__Impl
	rule__DataModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getDataModelAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__3__Impl
	rule__DataModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getInstancesAssignment_3()); }
(rule__DataModel__InstancesAssignment_3)*
{ after(grammarAccess.getDataModelAccess().getInstancesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__4__Impl
	rule__DataModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getStartKeyword_4()); }

	'start' 

{ after(grammarAccess.getDataModelAccess().getStartKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__5__Impl
	rule__DataModel__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getViewAssignment_5()); }
(rule__DataModel__ViewAssignment_5)
{ after(grammarAccess.getDataModelAccess().getViewAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataModel__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataModel__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getDataModelAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Instance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__0__Impl
	rule__Instance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getInstanceAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__1__Impl
	rule__Instance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTypeAssignment_1()); }
(rule__Instance__TypeAssignment_1)
{ after(grammarAccess.getInstanceAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameAssignment_2()); }
(rule__Instance__NameAssignment_2)
{ after(grammarAccess.getInstanceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__View__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__0__Impl
	rule__View__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getViewKeyword_0()); }

	'view' 

{ after(grammarAccess.getViewAccess().getViewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__1__Impl
	rule__View__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getNameAssignment_1()); }
(rule__View__NameAssignment_1)
{ after(grammarAccess.getViewAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__2__Impl
	rule__View__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getViewAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__3__Impl
	rule__View__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getLayoutAssignment_3()); }
(rule__View__LayoutAssignment_3)
{ after(grammarAccess.getViewAccess().getLayoutAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__4__Impl
	rule__View__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getContentsAssignment_4()); }
(rule__View__ContentsAssignment_4)*
{ after(grammarAccess.getViewAccess().getContentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__View__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__View__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__View__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getViewAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ViewContainer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewContainer__Group__0__Impl
	rule__ViewContainer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContainer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContainerAccess().getContainerKeyword_0()); }

	'container' 

{ after(grammarAccess.getViewContainerAccess().getContainerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewContainer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewContainer__Group__1__Impl
	rule__ViewContainer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContainer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContainerAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getViewContainerAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewContainer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewContainer__Group__2__Impl
	rule__ViewContainer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContainer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContainerAccess().getLayoutAssignment_2()); }
(rule__ViewContainer__LayoutAssignment_2)
{ after(grammarAccess.getViewContainerAccess().getLayoutAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewContainer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewContainer__Group__3__Impl
	rule__ViewContainer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContainer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContainerAccess().getContentsAssignment_3()); }
(rule__ViewContainer__ContentsAssignment_3)*
{ after(grammarAccess.getViewContainerAccess().getContentsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewContainer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewContainer__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContainer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContainerAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getViewContainerAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ViewElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewElement__Group__0__Impl
	rule__ViewElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewElementAccess().getTypeAssignment_0()); }
(rule__ViewElement__TypeAssignment_0)
{ after(grammarAccess.getViewElementAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewElement__Group__1__Impl
	rule__ViewElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewElementAccess().getNameAssignment_1()); }
(rule__ViewElement__NameAssignment_1)
{ after(grammarAccess.getViewElementAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewElement__Group__2__Impl
	rule__ViewElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewElementAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getViewElementAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ViewElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ViewElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ViewElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewElementAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getViewElementAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GridLayout__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridLayout__Group__0__Impl
	rule__GridLayout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GridLayout__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridLayoutAccess().getSizeAssignment_0()); }
(rule__GridLayout__SizeAssignment_0)
{ after(grammarAccess.getGridLayoutAccess().getSizeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridLayout__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridLayout__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GridLayout__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridLayoutAccess().getFieldsAssignment_1()); }
(rule__GridLayout__FieldsAssignment_1)
{ after(grammarAccess.getGridLayoutAccess().getFieldsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Field__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__0__Impl
	rule__Field__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getFieldAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__1__Impl
	rule__Field__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getWidthAssignment_1()); }
(rule__Field__WidthAssignment_1)
{ after(grammarAccess.getFieldAccess().getWidthAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__2__Impl
	rule__Field__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getFieldAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__3__Impl
	rule__Field__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getHeightAssignment_3()); }
(rule__Field__HeightAssignment_3)
{ after(grammarAccess.getFieldAccess().getHeightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Field__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Field__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getFieldAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StackLayout__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StackLayout__Group__0__Impl
	rule__StackLayout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StackLayout__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStackLayoutAccess().getSizeAssignment_0()); }
(rule__StackLayout__SizeAssignment_0)
{ after(grammarAccess.getStackLayoutAccess().getSizeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StackLayout__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StackLayout__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StackLayout__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStackLayoutAccess().getDirectionAssignment_1()); }
(rule__StackLayout__DirectionAssignment_1)
{ after(grammarAccess.getStackLayoutAccess().getDirectionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Size__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Size__Group__0__Impl
	rule__Size__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getSizeAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Size__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Size__Group__1__Impl
	rule__Size__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeAccess().getWidthAssignment_1()); }
(rule__Size__WidthAssignment_1)
{ after(grammarAccess.getSizeAccess().getWidthAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Size__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Size__Group__2__Impl
	rule__Size__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getSizeAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Size__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Size__Group__3__Impl
	rule__Size__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeAccess().getHeightAssignment_3()); }
(rule__Size__HeightAssignment_3)
{ after(grammarAccess.getSizeAccess().getHeightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Size__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Size__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getSizeAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SizeExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeExpr__Group__0__Impl
	rule__SizeExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeExprAccess().getValueAssignment_0()); }
(rule__SizeExpr__ValueAssignment_0)
{ after(grammarAccess.getSizeExprAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SizeExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SizeExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SizeExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeExprAccess().getUnitAssignment_1()); }
(rule__SizeExpr__UnitAssignment_1)
{ after(grammarAccess.getSizeExprAccess().getUnitAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ServicesAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getServicesServiceParserRuleCall_0_0_0()); }
	ruleService{ after(grammarAccess.getModelAccess().getServicesServiceParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ViewsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getViewsViewParserRuleCall_0_1_0()); }
	ruleView{ after(grammarAccess.getModelAccess().getViewsViewParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ClassesAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getClassesClassParserRuleCall_0_2_0()); }
	ruleClass{ after(grammarAccess.getModelAccess().getClassesClassParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ModelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelDataModelParserRuleCall_1_0()); }
	ruleDataModel{ after(grammarAccess.getModelAccess().getModelDataModelParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ParentAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getParentClassTypeCrossReference_2_1_0()); }
(
{ before(grammarAccess.getClassAccess().getParentClassTypeIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getParentClassTypeIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getClassAccess().getParentClassTypeCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__PropertiesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getPropertiesPropertyParserRuleCall_4_0()); }
	ruleProperty{ after(grammarAccess.getClassAccess().getPropertiesPropertyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__ConfigurationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getConfigurationsPropertyParserRuleCall_3_0()); }
	ruleProperty{ after(grammarAccess.getServiceAccess().getConfigurationsPropertyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__ConfigurationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getConfigurationsPropertyParserRuleCall_4_1_0()); }
	ruleProperty{ after(grammarAccess.getServiceAccess().getConfigurationsPropertyParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__OperationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getOperationsOperationParserRuleCall_7_0()); }
	ruleOperation{ after(grammarAccess.getServiceAccess().getOperationsOperationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getTypeTypeReferenceParserRuleCall_1_0()); }
	ruleTypeReference{ after(grammarAccess.getOperationAccess().getTypeTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersPropertyParserRuleCall_4_0()); }
	ruleProperty{ after(grammarAccess.getOperationAccess().getParametersPropertyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersPropertyParserRuleCall_5_1_0()); }
	ruleProperty{ after(grammarAccess.getOperationAccess().getParametersPropertyParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ExpressionAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getExpressionExpressionParserRuleCall_8_0()); }
	ruleExpression{ after(grammarAccess.getOperationAccess().getExpressionExpressionParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getRightBaseExpressionParserRuleCall_1_2_0()); }
	ruleBaseExpression{ after(grammarAccess.getExpressionAccess().getRightBaseExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringExpression__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringExpressionAccess().getRightStringValueParserRuleCall_1_2_0()); }
	ruleStringValue{ after(grammarAccess.getStringExpressionAccess().getRightStringValueParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringProperty__ReferenceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringPropertyAccess().getReferencePropertyCrossReference_0()); }
(
{ before(grammarAccess.getStringPropertyAccess().getReferencePropertyIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getStringPropertyAccess().getReferencePropertyIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getStringPropertyAccess().getReferencePropertyCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__LiteralAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getLiteralSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getLiteralSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameFunctionEnumEnumRuleCall_0_0()); }
	ruleFunctionEnum{ after(grammarAccess.getFunctionAccess().getNameFunctionEnumEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ExpressionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExpressionsExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getExpressionsExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ExpressionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionAccess().getExpressionsExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getTypeTypeReferenceParserRuleCall_0_0()); }
	ruleTypeReference{ after(grammarAccess.getPropertyAccess().getTypeTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPropertyAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeCrossReference_0_1_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeIDTerminalRuleCall_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeIDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__SizeAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getSizeINTTerminalRuleCall_0_3_0()); }
	RULE_INT{ after(grammarAccess.getTypeReferenceAccess().getSizeINTTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeCrossReference_1_1_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeIDTerminalRuleCall_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeIDTerminalRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__RemainderAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getRemainderTypeReferenceParserRuleCall_1_2_1_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeReferenceAccess().getRemainderTypeReferenceParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__InstancesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getInstancesInstanceParserRuleCall_3_0()); }
	ruleInstance{ after(grammarAccess.getDataModelAccess().getInstancesInstanceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataModel__ViewAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataModelAccess().getViewInstanceCrossReference_5_0()); }
(
{ before(grammarAccess.getDataModelAccess().getViewInstanceIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getDataModelAccess().getViewInstanceIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getDataModelAccess().getViewInstanceCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTypeTypeReferenceParserRuleCall_1_0()); }
	ruleTypeReference{ after(grammarAccess.getInstanceAccess().getTypeTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getViewAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__LayoutAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getLayoutLayoutParserRuleCall_3_0()); }
	ruleLayout{ after(grammarAccess.getViewAccess().getLayoutLayoutParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__View__ContentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewAccess().getContentsViewContentParserRuleCall_4_0()); }
	ruleViewContent{ after(grammarAccess.getViewAccess().getContentsViewContentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContainer__LayoutAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContainerAccess().getLayoutLayoutParserRuleCall_2_0()); }
	ruleLayout{ after(grammarAccess.getViewContainerAccess().getLayoutLayoutParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewContainer__ContentsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewContainerAccess().getContentsViewContentParserRuleCall_3_0()); }
	ruleViewContent{ after(grammarAccess.getViewContainerAccess().getContentsViewContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewElement__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewElementAccess().getTypeViewTypeEnumRuleCall_0_0()); }
	ruleViewType{ after(grammarAccess.getViewElementAccess().getTypeViewTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ViewElement__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getViewElementAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getViewElementAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GridLayout__SizeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridLayoutAccess().getSizeSizeParserRuleCall_0_0()); }
	ruleSize{ after(grammarAccess.getGridLayoutAccess().getSizeSizeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GridLayout__FieldsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridLayoutAccess().getFieldsFieldParserRuleCall_1_0()); }
	ruleField{ after(grammarAccess.getGridLayoutAccess().getFieldsFieldParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__WidthAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getWidthINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getFieldAccess().getWidthINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Field__HeightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldAccess().getHeightINTTerminalRuleCall_3_0()); }
	RULE_INT{ after(grammarAccess.getFieldAccess().getHeightINTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StackLayout__SizeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStackLayoutAccess().getSizeSizeParserRuleCall_0_0()); }
	ruleSize{ after(grammarAccess.getStackLayoutAccess().getSizeSizeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StackLayout__DirectionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStackLayoutAccess().getDirectionDirectionEnumRuleCall_1_0()); }
	ruleDirection{ after(grammarAccess.getStackLayoutAccess().getDirectionDirectionEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Size__WidthAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeAccess().getWidthSizeExprParserRuleCall_1_0()); }
	ruleSizeExpr{ after(grammarAccess.getSizeAccess().getWidthSizeExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Size__HeightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeAccess().getHeightSizeExprParserRuleCall_3_0()); }
	ruleSizeExpr{ after(grammarAccess.getSizeAccess().getHeightSizeExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeExpr__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeExprAccess().getValueINTTerminalRuleCall_0_0()); }
	RULE_INT{ after(grammarAccess.getSizeExprAccess().getValueINTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SizeExpr__UnitAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSizeExprAccess().getUnitUnitEnumRuleCall_1_0()); }
	ruleUnit{ after(grammarAccess.getSizeExprAccess().getUnitUnitEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


